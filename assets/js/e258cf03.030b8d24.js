"use strict";(self.webpackChunkxcss_web=self.webpackChunkxcss_web||[]).push([[748],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2554:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_label:"Main principles",sidebar_position:1},o=void 0,s={unversionedId:"fundamentals/Main principles",id:"fundamentals/Main principles",title:"Main principles",description:"Conversion to XPath",source:"@site/docs/fundamentals/Main principles.md",sourceDirName:"fundamentals",slug:"/fundamentals/Main principles",permalink:"/xcss-selectors.guthub.io/docs/fundamentals/Main principles",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/fundamentals/Main principles.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Main principles",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Fundamentals",permalink:"/xcss-selectors.guthub.io/docs/category/fundamentals"},next:{title:"Search by index",permalink:"/xcss-selectors.guthub.io/docs/fundamentals/Search by index"}},l={},c=[{value:"Conversion to XPath",id:"conversion-to-xpath",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"conversion-to-xpath"},"Conversion to XPath"),(0,a.kt)("p",null,"XCSS format is designed to eliminate the gap between CSS and XPath.\nXCSS is CSS-like selectors format that provides features of XPath."),(0,a.kt)("p",null,"Under the hood XCSS selectors are transpiled to XPath, so there are two important conclusions from this."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Any valid XPath is a valid XCSS selector"),(0,a.kt)("li",{parentName:"ul"},"Not all CSS selectors features are supported by XCSS selectors, since not all CSS selector features can be converted to XPath")),(0,a.kt)("h1",{id:"any-valid-xpath-is-a-valid-xcss-selector"},"Any valid XPath is a valid XCSS selector"),(0,a.kt)("p",null,"XCSS is a CSS-like format. But since it is transpiled to XPath under the hood, any XPath selector can also be used in place of XCSS selector."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"findByXcss(\"//button[text()='Send message']\").Click();\n")),(0,a.kt)("h1",{id:"not-any-css-selector-is-a-valid-xcss-selector"},"Not any CSS selector is a valid XCSS selector"),(0,a.kt)("p",null,"XCSS is a CSS-like format. But not all CSS features can be transpiled to XPath, so XCSS format only supports subset of CSS features, but not all of them.s"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'// INVALID: nth-of-type() is not supported in XCSS\nfindByXcss("button:nth-of-type(2)").Click(); // error\n')),(0,a.kt)("h1",{id:"list-of-css-selector-features-supported-in-xcss"},"List of CSS selector features supported in XCSS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Search by id ",(0,a.kt)("inlineCode",{parentName:"li"},"#contacts")),(0,a.kt)("li",{parentName:"ul"},"Search by class ",(0,a.kt)("inlineCode",{parentName:"li"},".send-button")),(0,a.kt)("li",{parentName:"ul"},"Search by attribute ",(0,a.kt)("inlineCode",{parentName:"li"},"button[class='send-button']"))),(0,a.kt)("h1",{id:"list-of-xpath-features-supported-in-xcss"},"List of XPath features supported in XCSS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Search by text ",(0,a.kt)("inlineCode",{parentName:"li"},"span['Rebekah']")),(0,a.kt)("li",{parentName:"ul"},"Search by index ",(0,a.kt)("inlineCode",{parentName:"li"},"li[2]")),(0,a.kt)("li",{parentName:"ul"},"Search by inner element ",(0,a.kt)("inlineCode",{parentName:"li"},"li[>span['Rebekah']]")),(0,a.kt)("li",{parentName:"ul"},"Search by XPath condition ",(0,a.kt)("inlineCode",{parentName:"li"},"#contacts li[position() mod 2 = 1]"))))}d.isMDXComponent=!0}}]);